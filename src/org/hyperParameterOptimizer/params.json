{
  "algorithm_variants": {
    "AlphaMiner": {
      "algorithm": "AlphaMiner",
      "variant": "Alpha Miner",
      "variantParameterName": "alphaVariant"
    },
    "InductiveMiner": {
      "algorithm": "InductiveMiner",
      "variant": "Inductive Miner",
      "variantParameterName": "inductiveVariant"
    },
    "HM": {
      "algorithm": "HeuristicsMiner",
      "variant": "Heuristics Miner",
      "requiresRelativeToBest": true,
      "requiresDependencyThreshold": true,
      "requiresLengthOneLoopsThreshold": true,
      "requiresLengthTwoLoopsThreshold": true,
      "requiresLongDistanceThreshold": true,
      "requiresAllTasksConnected": true,
      "requiresLongDistanceDependency": true,
      "requiresIgnoreLoopDependencyThresholds": true
    },
    "SM": {
      "algorithm": "SplitMiner",
      "variant": "Split Miner",
      "requiresEta": true,
      "requiresEpsilon": true,
      "requiresParallelismFirst": true,
      "requiresReplaceIORs": true,
      "requiresRemoveLoopActivities": true
    },
    "ILPMiner": {
      "algorithm": "HybridILPMiner",
      "variant": "Hybrid ILPMiner",
      "requiresLPObjective": true,
      "requiresOptionalConstraintPNet": true,
      "requiresLPFilter": true,
      "requiresSlackVariableFilterThreshold": true,
      "requiresSequenceEncodingCutoffLevel": true,
      "requiresLPVariableType": true
    }
  },
  "variantRequirements": {
    "AlphaMiner": {
      "AlphaR": [
        "causalThreshold",
        "noiseThresholdLeastFreq",
        "noiseThresholdMostFreq"
      ]
    },
    "InductiveMiner": {
      "Inductive Miner - infrequent (IMf)": [
        "noiseThreshold"
      ],
      "Inductive Miner - infrequent & all operators (IMfa)": [
        "noiseThreshold"
      ],
      "Inductive Miner - infrequent & life cycle (IMflc)": [
        "noiseThreshold"
      ]
    }
  },
  "parameters": {
    "alphaVariant": {
      "type": "categorical",
      "choices": [
        "Alpha",
        "Alpha+",
        "Alpha++",
        "Alpha#",
        "AlphaR"
      ]
    },
    "inductiveVariant": {
      "type": "categorical",
      "choices": [
        "Inductive Miner (IM)",
        "Inductive Miner - infrequent (IMf)",
        "Inductive Miner - all operators (IMa)",
        "Inductive Miner - infrequent & all operators (IMfa)",
        "Inductive Miner - incompleteness (IMc)",
        "Inductive Miner - life cycle (IMlc)",
        "Inductive Miner - infrequent & life cycle (IMflc)"
      ]
    },
    "probabilityOfRemovalMF": {
      "type": "float",
      "low": 0.01,
      "high": 0.4
    },
    "subsequenceLengthMF": {
      "type": "integer",
      "low": 1,
      "high": 4
    },
    "probabilityOfRemovalRL": {
      "type": "float",
      "low": 0.01,
      "high": 0.4
    },
    "subsequenceLengthRL": {
      "type": "integer",
      "low": 1,
      "high": 4
    },
    "percentageOccurance": {
      "type": "float",
      "low": 0.1,
      "high": 3
    },
    "noiseThreshold": {
      "type": "float",
      "low": 0.0,
      "high": 1.0
    },
    "causalThreshold": {
      "type": "float",
      "low": 1.0,
      "high": 120.0
    },
    "noiseThresholdLeastFreq": {
      "type": "float",
      "low": 0.0,
      "high": 1.0
    },
    "noiseThresholdMostFreq": {
      "type": "float",
      "low": 0.0,
      "high": 1.0
    },
    "relativeToBest": {
      "type": "float",
      "low": 1.0,
      "high": 10.0
    },
    "dependencyThreshold": {
      "type": "float",
      "low": 0.0,
      "high": 100.0
    },
    "lengthOneLoopsThreshold": {
      "type": "float",
      "low": 0.0,
      "high": 100.0
    },
    "lengthTwoLoopsThreshold": {
      "type": "float",
      "low": 0.0,
      "high": 100.0
    },
    "longDistanceThreshold": {
      "type": "float",
      "low": 0.0,
      "high": 100.0
    },
    "allTasksConnected": {
      "type": "categorical",
      "choices": [
        true,
        false
      ]
    },
    "longDistanceDependency": {
      "type": "categorical",
      "choices": [
        true,
        false
      ]
    },
    "ignoreLoopDependencyThresholds": {
      "type": "categorical",
      "choices": [
        true,
        false
      ]
    },
    "eta": {
      "type": "float",
      "low": 0.0,
      "high": 1.0
    },
    "epsilon": {
      "type": "float",
      "low": 0.0,
      "high": 1.0
    },
    "parallelismFirst": {
      "type": "categorical",
      "choices": [
        true,
        false
      ]
    },
    "replaceIORs": {
      "type": "categorical",
      "choices": [
        true,
        false
      ]
    },
    "removeLoopActivities": {
      "type": "categorical",
      "choices": [
        true,
        false
      ]
    },
    "lPVariableType": {
      "type": "categorical",
      "choices": [
        "Two variables per event",
        "One variable per event, two for an event which is potentially in a self loop",
        "One variable per event"
      ]
    },
    "lPObjective": {
      "type": "categorical",
      "choices": [
        "Minimize Arcs",
        "Unweighted Parikh values",
        "Weighted Parikh values, using absolute frequencies",
        "Weighted Parikh values, using relative frequencies"
      ]
    },
    "lPFilter": {
      "type": "categorical",
      "choices": [
        "None",
        "Sequence Encoding Filter",
        "Slack Variable Filter"
      ]
    },
    "slackVariableFilterThreshold": {
      "type": "float",
      "low": 0.0,
      "high": 1.0
    },
    "sequenceEncodingCutoffLevel": {
      "type": "float",
      "low": 0.0,
      "high": 1.0
    }
  },
  "preprocessing_variants": {
    "TraceFilter": {
      "method": "Trace Filter",
      "variant": "Trace Frequency Filter (TF)",
      "requiresPercentageOccurance": true
    },
    "MatrixFilter": {
      "method": "Matrix Filtering",
      "variant": "Conditional Probabilities (MF)",
      "requiresProbabilityOfRemovalMF": true,
      "requiresSubsequenceLengthMF": true
    },
    "RepairLogFilter": {
      "method": "Repair Log Filter",
      "variant": "Repair Log Filter (RLF)",
      "requiresProbabilityOfRemovalRL": true,
      "requiresSubsequenceLengthRL": true
    }
  }
}
